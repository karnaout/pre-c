{"version":3,"file":"Dashboard-BRaQTaxT.js","sources":["../../src/Hooks/useRegister.jsx","../../src/Components/Common/Admin/Registration.jsx","../../src/pages/Dashboard.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-hot-toast';\r\nexport const useRegister = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  const register = async (firstName, secondName, username, email, password, role,biomarkers) => {\r\n    setLoading(true);\r\n    setError(null);\r\n   \r\n    let emailTrim = email.toLowerCase().trim();\r\n    try {\r\n      const response = await axios.post(import.meta.env.VITE_API_URL_REGISTER, {\r\n        firstName,\r\n        secondName,\r\n        username,\r\n        email:emailTrim,\r\n        password,\r\n        role,\r\n        biomarkers\r\n\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        maxBodyLength: Infinity,\r\n      });\r\n      console.log()\r\n      setData(response.data);\r\n     \r\n    } catch (err) {\r\n      // Ensure error is a string\r\n      console.log(err?.response?.data?.message)\r\n      setError(err.response ? err.response.data.message || err.message : err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { register, loading, error, data };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, TextField, Button, CircularProgress, FormControl, FormControlLabel, RadioGroup, Radio, Typography, Alert, Box } from '@mui/material';\r\nimport { useRegister } from '../../../Hooks/useRegister'; // Adjust the path as needed\r\nimport { toast } from 'react-hot-toast';\r\n\r\nexport const Registration = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [secondName, setSecondName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [role, setRole] = useState('3'); // Default role\r\n  const [biomarkers, setBiomarkers] = useState('no'); // New state for biomarkers\r\n  const { register, loading, error, data } = useRegister();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      toast.error('Passwords do not match');\r\n      return;\r\n    }\r\n    register(firstName, secondName, username, email, password, role, biomarkers);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      toast.success('Registration successful');\r\n      \r\n      // Reset all fields after successful registration\r\n      setFirstName('');\r\n      setSecondName('');\r\n      setUsername('');\r\n      setEmail('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n      setRole('3');\r\n      setBiomarkers('no');\r\n    }\r\n  }, [data]);\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" sx={{ p: 3, my: 5, background: \"white\", borderRadius: \"24px\", padding: \"34px\", marginTop: \"0px\" }}>\r\n      <Typography variant=\"h5\" align=\"center\" gutterBottom>\r\n        Add New User\r\n      </Typography>\r\n      <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\r\n        <TextField\r\n          label=\"First Name\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={firstName}\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Last Name\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={secondName}\r\n          onChange={(e) => setSecondName(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Username\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Email Address\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          required\r\n        />\r\n        <TextField\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          value={confirmPassword}\r\n          onChange={(e) => setConfirmPassword(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <FormControl component=\"fieldset\" sx={{ mt: 2 }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            Role\r\n          </Typography>\r\n          <RadioGroup\r\n            value={role}\r\n            onChange={(e) => setRole(e.target.value)}\r\n            row\r\n          >\r\n            <FormControlLabel\r\n              value=\"1\"\r\n              control={<Radio />}\r\n              label=\"Admin\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"2\"\r\n              control={<Radio />}\r\n              label=\"Intervention\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"3\"\r\n              control={<Radio />}\r\n              label=\"Control\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        {/* New Biomarkers Field */}\r\n        <FormControl component=\"fieldset\" sx={{ mt: 2 }}>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            â‰¥ 2+ biomarkers?\r\n          </Typography>\r\n          <RadioGroup\r\n            value={biomarkers}\r\n            onChange={(e) => setBiomarkers(e.target.value)}\r\n            row\r\n          >\r\n            <FormControlLabel\r\n              value=\"yes\"\r\n              control={<Radio />}\r\n              label=\"Yes\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"no\"\r\n              control={<Radio />}\r\n              label=\"No\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          type=\"submit\"\r\n          fullWidth\r\n          sx={{ mt: 3, mb: 2 }}\r\n          disabled={loading}\r\n        >\r\n          {loading ? (\r\n            <>\r\n              <CircularProgress size={24} sx={{ mr: 1 }} />\r\n              Registering...\r\n            </>\r\n          ) : (\r\n            'Register'\r\n          )}\r\n        </Button>\r\n      </Box>\r\n\r\n      {error && <Alert severity=\"error\" sx={{ mt: 2 }}>{error}</Alert>}\r\n    </Container>\r\n  );\r\n};\r\n","// Dashboard.jsx\r\nimport React from 'react';\r\nimport { Container, Grid, Box } from '@mui/material';\r\nimport { Registration } from '../Components/Common/Admin/Registration';\r\nimport { Helmet } from 'react-helmet';\r\nconst Dashboard = () => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      \r\n      <Grid container spacing={2}>\r\n        \r\n        <Grid item xs={12} md={6}>\r\n          <Box>\r\n            <Registration />\r\n          </Box>\r\n        </Grid>\r\n\r\n        \r\n        \r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"names":["useRegister","loading","setLoading","useState","error","setError","data","setData","firstName","secondName","username","email","password","role","biomarkers","emailTrim","response","axios","err","_b","_a","Registration","setFirstName","setSecondName","setUsername","setEmail","setPassword","confirmPassword","setConfirmPassword","setRole","setBiomarkers","register","handleSubmit","e","toast","useEffect","jsxs","Container","jsx","Typography","Box","TextField","FormControl","RadioGroup","FormControlLabel","Radio","Button","Fragment","CircularProgress","Alert","Dashboard","Grid"],"mappings":"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"}