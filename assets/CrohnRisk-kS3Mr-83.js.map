{"version":3,"file":"CrohnRisk-kS3Mr-83.js","sources":["../../node_modules/react-bootstrap/esm/Spinner.js","../../src/Hooks/RiskCalculation.jsx","../../node_modules/@mui/icons-material/HelpOutline.js","../../src/Components/Card/CardBehavior.jsx","../../src/Components/Card/CardRiskColor.jsx","../../src/Components/Card/CardHumain.jsx","../../node_modules/@mui/icons-material/Close.js","../../src/Components/Modal/InfoModal.jsx","../../src/Components/Card/CardBehaviorCheck.jsx","../../src/pages/CrohnRisk.jsx"],"sourcesContent":["\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Spinner = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  variant,\n  animation = 'border',\n  size,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  const bsSpinnerPrefix = `${bsPrefix}-${animation}`;\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsSpinnerPrefix, size && `${bsSpinnerPrefix}-${size}`, variant && `text-${variant}`)\n  });\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport const useRiskCalculation = () => {\r\n  const [response, setresponse] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const RiskCalculation = async (formData) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await axios.get(import.meta.env.VITE_APP_BASE_API + 'risk', {\r\n        headers: {\r\n          'Authorization': `${localStorage.getItem('token')}`, \r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n\r\n      setresponse(response.data);  // Store only response.data\r\n      return response.data;        // Return response to the caller\r\n    } catch (err) {\r\n      setError(err.response ? err.response.data : err.message);\r\n      return null; // Return null in case of an error\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { RiskCalculation, response, loading, error };\r\n};\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M11 18h2v-2h-2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8m0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4\"\n}), 'HelpOutline');","import React from 'react';\r\nimport { Box, Typography, Grid, Paper, IconButton } from '@mui/material';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\n\r\nexport const CardBehavior = ({ title, subtitle, behaviors }) => {\r\n  return (\r\n    <Paper className=\"behavor-card\"elevation={3} sx={{ paddingTop: \"26px\",paddingLeft:\"33px\",paddingRight:\"53px\",paddingBottom:\"43px\" ,borderRadius: 2, backgroundColor: 'white', marginTop: '20px' }}>\r\n      <Typography className=\"risk-card-title\" variant=\"h6\" sx={{ color: '#006494', marginBottom: 1 ,fontWeight:\"700\" }}>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"body1\" sx={{ color: '#00796B', marginBottom: 2 }}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Grid container direction=\"column\" spacing={1} className='behavor'>\r\n        {behaviors.map((behavior, index) => (\r\n          <Grid item key={index} container alignItems=\"center\" justifyContent=\"space-between\" sx={{ borderTop: '1px solid #597D0B', paddingBottom: 1 }}>\r\n            <Grid item container alignItems=\"center\" xs={10}>\r\n              <Box \r\n                component=\"img\" \r\n                src=\"/like.png\" \r\n                alt=\"Checked Icon\" \r\n                sx={{ width: 30, height: 30, marginRight: 1 }} \r\n              />\r\n              <Typography variant=\"body1\" sx={{ color: '#00796B',marginBottom:\"0px !important\",marginLeft:\"10px\" }}>\r\n                {behavior}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} container justifyContent=\"flex-end\">\r\n              <IconButton>\r\n                <HelpOutlineIcon sx={{ color: '#597D0B',width: 30, height: 30 }} />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};","import React from 'react';\r\nimport { Box, Typography, Grid, Paper } from '@mui/material';\r\n\r\nconst riskLevels = [\"VERY LOW\", \"LOW\", \"SIMILAR\", \"HIGH\", \"VERY HIGH\"];\r\nconst riskColors = {\r\n  \"VERY LOW\": \"#FCE7A0\",\r\n  \"LOW\": \"#FFD990\",\r\n  \"SIMILAR\": \"#FFC077\",\r\n  \"HIGH\": \"#FA9B5F\",\r\n  \"VERY HIGH\": \"#ED7837\",\r\n};\r\n\r\nexport const RiskCard = ({ riskLevel, firtSetnance, Diagnostics, lastDiagnostics}) => {\r\n  // Calculate the vertical position for the \"YOUR CURRENT RISK\" box\r\n  const riskIndex = riskLevels.indexOf(riskLevel);\r\n  const riskBoxTopPosition = riskIndex * 55; // Adjust based on the height and spacing of each risk level box\r\n\r\n\r\n  return (\r\n    <Paper className=\"risk-card-container\" elevation={3} sx={{ padding: 3, borderRadius: 2, backgroundColor: 'white',gap:\"180px \" }}>\r\n      <Grid className=\"risk-card-grid\" container spacing={2} sx={{ position: 'relative' }}>\r\n        <Grid className=\"risk-card-levels\" item xs={3} sx={{ position: 'relative' }}>\r\n          {riskLevels.map((level, index) => (\r\n            <Box\r\n              key={level}\r\n              sx={{\r\n                backgroundColor: riskColors[level],\r\n                textAlign: 'center',\r\n               \r\n                marginBottom: 1,\r\n                height: '59px', // Adjust the height to match the design\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                position: 'relative',\r\n                fontSize:\"15px\",\r\n                color:\"black\",\r\n                fontWeight:\"800\"\r\n              }}\r\n              \r\n            >\r\n              {level}\r\n              {level === riskLevel && (\r\n                <Box \r\n                  sx={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '100%',\r\n                    transform: 'translateY(-50%)',\r\n                    backgroundImage: 'url(/union.png)',\r\n                    backgroundSize: 'cover',\r\n                    backgroundRepeat: 'no-repeat',\r\n              \r\n                    display: 'inline-block',\r\n                \r\n                  }}\r\n                  className=\"pointer-container\"\r\n                >\r\n                  <Typography variant=\"body2\" sx={{ fontWeight: 'bold',color:\"white !important\" ,fontSize:\"16px\"}}>YOUR CURRENT RISK</Typography>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          ))}\r\n        </Grid>\r\n        <Grid item xs={9} sx={{ position: 'relative',  maxWidth:\"401px !important\" }} className=\"risk-card-description-container\">\r\n          <Box className=\"risk-card-description\" sx={{ marginTop: `${riskBoxTopPosition + 10}px`,maxWidth:\"401px\",backgroundr:\"red\" }}>\r\n            <Typography  className=\"risk-card-title\" variant=\"h6\" sx={{ color: '#006494', marginBottom: 1 }}>\r\n              Current risk of Crohnâ€™s disease\r\n            </Typography>\r\n            <Typography className=\"risk-card-text\" variant=\"body1\" sx={{ color: '#333' }}>\r\n              {firtSetnance} <strong>{Diagnostics}</strong> {lastDiagnostics}\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n\r\n","import React from 'react';\r\nimport { Box, Typography, Grid, Paper } from '@mui/material';\r\n\r\nexport const CardHumain = ({ HumainSentnace, firstSentence, diagnostics, lastDiagnostics, riskPercentage,greenHumain =0}) => {\r\n  const filledHumans = riskPercentage;\r\n  const emptyHumans = 100 - filledHumans;\r\n\r\n\r\n  // Calculate the position where \"YOUR CURRENT RISK\" should be placed\r\n  const currentRiskPosition = Math.floor(emptyHumans / 10) * 29; // Adjust this multiplier based on your spacing\r\n\r\n  return (\r\n    <Paper className=\"risk-card-container\" elevation={3} sx={{ padding: 3, borderRadius: 2, backgroundColor: 'white', gap: \"180px \",marginTop:\"52px\" }}>\r\n      <Grid className=\"risk-card-grid\" container spacing={2} sx={{ position: 'relative' }}>\r\n        <Grid item xs={3} sx={{ position: 'relative', display: 'flex', flexWrap: 'wrap',paddingLeft:\"58px\" }} className='humain-container'>\r\n          {/* Render empty humans */}\r\n          {Array.from({ length: emptyHumans }).map((_, index) => (\r\n            <Box\r\n              key={`empty-${index}`}\r\n              component=\"img\"\r\n              src=\"/humain empty.svg\" // Your empty human icon\r\n              alt=\"Empty Human\"\r\n              sx={{ width: 15, height: 25, margin: '2px' }}\r\n            />\r\n          ))}\r\n\r\n          {/* Render filled humans */}\r\n          {Array.from({ length: greenHumain }).map((_, index) => (\r\n            <Box\r\n              key={`filled-${index}`}\r\n              component=\"img\"\r\n              src=\"/green humain.svg\" // Your filled human icon\r\n              alt=\"Filled Human\"\r\n              sx={{ width: 15, height: 25, margin: '2px' }}\r\n            />\r\n          ))}\r\n          {Array.from({ length: filledHumans }).map((_, index) => (\r\n            <Box\r\n              key={`filled-${index}`}\r\n              component=\"img\"\r\n              src=\"/humain.svg\" // Your filled human icon\r\n              alt=\"Filled Human\"\r\n              sx={{ width: 15, height: 25, margin: '2px' }}\r\n            />\r\n          ))}\r\n\r\n          {/* Render \"YOUR CURRENT RISK\" label */}\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: `${currentRiskPosition}px`, // Position based on the number of empty humans\r\n              left: '100%',\r\n              transform: 'translateY(-50%)',\r\n              backgroundImage: 'url(/union.png)',\r\n              color: 'white',\r\n              borderRadius: '4px',\r\n              display: 'inline-block',\r\n              textAlign:\"center\",\r\n              marginTop:\"20px\",\r\n              fontSize: '12px',\r\n              fontWeight: 'bold',\r\n            }}\r\n            className=\"pointer-container humain\"\r\n          >\r\n            <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color: \"white !important\", fontSize: \"16px\" }}>\r\n            Your lifetime risk \r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={9} sx={{ position: 'relative', maxWidth: \"401px !important\",width:\"401px\" }} className=\"risk-card-description-container\">\r\n          <Box className=\"risk-card-description\" sx={{ marginTop: '10px', maxWidth: \"401px\" }}>\r\n            <Typography className=\"risk-card-title humain\" variant=\"h6\" sx={{ color: '#006494', marginBottom: 1 }}>\r\n              Lifetime risk of Crohnâ€™s disease\r\n            </Typography>\r\n            <Typography className=\"risk-card-title\" variant=\"p\" sx={{ color: 'black', marginBottom: 1,fontWeight:\"700\",fontSize:\"19px !important\" }}>\r\n            {HumainSentnace} {riskPercentage}%.\r\n            </Typography>\r\n           \r\n            <Typography className=\"risk-card-text\" variant=\"body1\" sx={{ color: '#333' }}>\r\n              {firstSentence} <strong>{diagnostics}</strong> {lastDiagnostics}\r\n            </Typography>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n\r\n \r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\r\nimport { Dialog, DialogTitle, DialogContent, IconButton, Typography, Box } from '@mui/material';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport parse from 'html-react-parser';\r\nexport const InfoModal = ({ open, handleClose, title, content }) => {\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onClose={handleClose}\r\n      maxWidth=\"lg\"\r\n      PaperProps={{\r\n        sx: {\r\n          borderRadius: '8px',\r\n          backgroundColor: 'white', // Light blue background\r\n          padding: '0px',\r\n          paddingTop:\"0px\"\r\n        }\r\n      }}\r\n    >\r\n      <DialogTitle sx={{background:\"#117BA3\",paddingBottom:\"8px\"}}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n          <Typography variant=\"h6\" sx={{ color: 'white', fontWeight: 'bold' }}>\r\n            {title}\r\n          </Typography>\r\n          <IconButton sx={{color:\"white\"}}onClick={handleClose}>\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </Box>\r\n      </DialogTitle>\r\n      <DialogContent sx={{marginTop:\"26px\",background:\"white\",color: '#117BA3', marginBottom: 2,fontSize:\"19px\",fontWeight:'400',lineHeight:'1.7em  ' }}>\r\n       \r\n          {parse(content)}\r\n       \r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};","import React, { useState,useEffect} from 'react';\r\nimport { Box, Typography, Grid, Paper, Checkbox, IconButton } from '@mui/material';\r\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport { riskLevels, riskColors } from \"../../Data/Data\";\r\nimport {InfoModal} from \"../Modal/InfoModal\"\r\nexport const CardBehaviorCheck = ({ title, subtitle, behaviors,openMpdal,RiskLevel ,EmptyHumain ,riskPercentage,FilledHumans }) => {\r\n  // State to manage which behaviors are checked\r\n  const [CurrentPosition,setCurrentPosition] = useState (\"50%\")\r\n  const [checkedBehaviors, setCheckedBehaviors] = useState({});\r\n  const [emptyHumans, setemptyHumans] = useState(EmptyHumain);\r\n  const [filledHumans, setfilledHumans] = useState(FilledHumans);\r\n  const [greenHumain, setgreenHumain] = useState(0);\r\n  const emeptyTimeless = 100-riskPercentage\r\n  const currentRiskPosition = Math.floor(emeptyTimeless / 10) * 29;\r\n  const riskLevel = RiskLevel;\r\n  const riskIndex = riskLevels.indexOf(riskLevel);\r\n  const riskBoxTopPosition = riskIndex * 55;\r\n  const position = {\r\n    \"1\":\"95px\",\r\n    \"2\":\"150px\",\r\n    \"-1\":\"-40px\",\r\n    \"-2\":\"-100px\"\r\n\r\n  }\r\n  // Handle the change event for checkboxes\r\n  const handleCheckboxChange = (behavior) => {\r\n    \r\n    setCheckedBehaviors(prevState => ({\r\n      ...prevState,\r\n      [behavior]: !prevState[behavior], // Toggle the checked state\r\n    }));\r\n    \r\n  };\r\n  /*useEffect(() => {\r\n    // Rehydrate the questionnaire state on app load\r\n    if(checkedBehaviors[\"Quit smoking\"] ===true ){\r\n        console.log(checkedBehaviors)\r\n        console.log(\"lenght\")\r\n        //setCurrentPosition(\"150px\")\r\n        //setfilledHumans(28)\r\n        \r\n        //setgreenHumain(30)\r\n        setCurrentPosition(\"50%\")\r\n        setfilledHumans(FilledHumans)\r\n        \r\n        setgreenHumain(0)\r\n    }\r\n    else{\r\n        setCurrentPosition(\"50%\")\r\n        setfilledHumans(FilledHumans)\r\n        \r\n        setgreenHumain(0)\r\n    }\r\n  }, [checkedBehaviors]);*/\r\n  return (\r\n    <Paper className=\"behavor-card\" elevation={3} sx={{ paddingTop: \"26px\", paddingLeft: \"33px\", paddingRight: \"53px\", paddingBottom: \"43px\", borderRadius: 2, backgroundColor: 'white', marginTop: '20px' }}>\r\n      <Typography className=\"risk-card-title\" variant=\"h6\" sx={{ color: '#006494', marginBottom: 1, fontWeight: \"700\" }}>\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"body1\" sx={{ color: '#00796B', marginBottom: 2 }}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Grid container direction=\"column\" spacing={1} className='behavor'>\r\n        {behaviors.map((behavior, index) => (\r\n          <Grid item key={index} container alignItems=\"center\" justifyContent=\"space-between\" sx={{ borderTop: '1px solid #597D0B', paddingBottom: 1, marginTop: \"10px\" }}>\r\n            <Grid item container alignItems=\"center\" xs={10}>\r\n              <Checkbox\r\n                checked={!!checkedBehaviors[behavior]} // Check if the behavior is checked\r\n                onChange={() => handleCheckboxChange(behavior)} // Handle change\r\n                sx={{ color: '#597D0B', '&.Mui-checked': { color: '#597D0B' }, width: 24, height: 24, marginTop: '-2px' }}\r\n              />\r\n              <Typography variant=\"body1\" sx={{ color: '#00796B', marginBottom: \"0px !important\", marginLeft: \"10px\" }} >\r\n                {behavior}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={2} container justifyContent=\"flex-end\">\r\n              <IconButton onClick={openMpdal}>\r\n                <HelpOutlineIcon sx={{ color: '#597D0B', width: 30, height: 30 }} />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n\r\n        <Grid item container xs={10} alignItems=\"flex-start\" justifyContent=\"space-between\" className='mixed-component-container'>\r\n          <Grid item container alignItems=\"center\" xs={5} justifyContent=\"left\">\r\n            <Grid item container alignItems=\"center\" xs={10} justifyContent=\"left\" className='title-container'>\r\n              <Typography variant=\"h6\" sx={{ color: '#117BA3', marginBottom: 0 }}>\r\n              Your current risk\r\n              </Typography>\r\n            </Grid>\r\n            \r\n            <Grid className=\"risk-card-levels mixed \" item xs={10} sx={{ position: 'relative' ,marginTop:\"40px\",paddingLeft:\"23.5px\"}}>\r\n              {riskLevels.map((level, index) => (\r\n                <Box\r\n                  key={level}\r\n                  sx={{\r\n                    backgroundColor: riskColors[level],\r\n                    textAlign: 'center',\r\n                    marginBottom: \"7.5px\",\r\n                    height: '58px', // Adjust the height to match the design\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    position: 'relative',\r\n                    fontSize: \"15px\",\r\n                    color: \"black\",\r\n                    fontWeight: \"800\",\r\n                    maxWidth:\"182px\",\r\n\r\n                  }}\r\n                >\r\n                  {level}\r\n                  {level === riskLevel && (\r\n                    <>\r\n                    <Box\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        top: '50%',\r\n                        left: '100%',\r\n                        transform: 'translateY(-50%)',\r\n                        backgroundImage: 'url(/union-3-clair.svg)',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        display: 'flex',\r\n                        alignItems:'center',\r\n                        width:\"139px\",\r\n                        height:\"41px\",\r\n                        paddingLeft:\"23px\",\r\n                        marginLeft:\"12px\",\r\n                      }}\r\n                      className=\"pointer-container\"\r\n                    >\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold', color:\"#80BBD1 !important\", fontSize: \"14px\",marginBottom:\"0px\" }}>\r\n                        CURRENT RISK\r\n                      </Typography>\r\n                      \r\n                    </Box>\r\n\r\n                    <Box\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        top: CurrentPosition,\r\n                        left: '100%',\r\n                        transform: 'translateY(-50%)',\r\n                        backgroundImage: 'url(/union-3.svg)',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        display: 'flex',\r\n                        alignItems:'center',\r\n                        width:\"139px\",\r\n                        height:\"41px\",\r\n                        paddingLeft:\"23px\",\r\n                        marginLeft:\"12px\",\r\n                       \r\n                        fontWeight:\"700\",\r\n                      }}\r\n                      className=\"pointer-container clear\"\r\n                    >\r\n                      <Typography variant=\"body2\" sx={{ fontWeight: 'bold', fontSize: \"14px\",marginBottom:\"0px\",color: \"white !important\",   }}>\r\n                        CURRENT RISK\r\n                      </Typography>\r\n                    </Box>\r\n                    </>\r\n                    //union-3-clair\r\n                  )}\r\n                </Box>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item container alignItems=\"center\" xs={5} justifyContent=\"left\">\r\n            <Grid item container alignItems=\"center\" xs={10} justifyContent=\"left\" className='title-container'>\r\n              <Typography variant=\"h6\" sx={{ color: '#117BA3', marginBottom: 0 }}>\r\n                YOUR Lifetime risk\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={7} sx={{ position: 'relative', display: 'flex', flexWrap: 'wrap', marginTop: \"40px\",rowGap:\"4px\" }} className='humain-container'>\r\n              {/* Render empty humans */}\r\n              {Array.from({ length:emeptyTimeless/*emptyHumans*/ }).map((_, index) => (\r\n                <Box\r\n                  key={`empty-${index}`}\r\n                  component=\"img\"\r\n                  src=\"/humain empty.svg\" // Your empty human icon\r\n                  alt=\"Empty Human\"\r\n                  sx={{ width: 15, height: 25, margin: '2px' }}\r\n                />\r\n              ))}\r\n\r\n              {Array.from({ length: greenHumain }).map((_, index) => (\r\n                <Box\r\n                  key={`filled-${index}`}\r\n                  component=\"img\"\r\n                  src=\"/green humain.svg\" // Your filled human icon\r\n                  alt=\"Filled Human\"\r\n                  sx={{ width: 15, height: 25, margin: '2px' }}\r\n                />\r\n              ))}\r\n              {Array.from({ length: riskPercentage /*filledHumans*/ }).map((_, index) => (\r\n                <Box\r\n                  key={`filled-${index}`}\r\n                  component=\"img\"\r\n                  src=\"/humain.svg\" // Your filled human icon\r\n                  alt=\"Filled Human\"\r\n                  sx={{ width: 15, height: 25, margin: '2px' }}\r\n                />\r\n              ))}\r\n\r\n              <Box\r\n                sx={{\r\n                  position: 'absolute',\r\n                  top: `${currentRiskPosition}px`, // Position based on the number of empty humans\r\n                  left: '100%',\r\n                  transform: 'translateY(-50%)',\r\n                  color: 'white',\r\n                  borderRadius: '4px',\r\n                  display: 'inline-block',\r\n                  textAlign: \"center\",\r\n                  marginTop: \"20px\",\r\n                  fontSize: '12px',\r\n                  fontWeight: 'bold',\r\n                  backgroundSize: \"cover\",\r\n                  width: \"128px\",\r\n                }}\r\n                className=\"pointer-container humain\"\r\n              >\r\n                <Typography sx={{ fontWeight: 'bold', color: \"#117BA3 !important\", fontSize: \"22px\", border: \"2px solid\", marginLeft: \"9.5px\" }}>\r\n                  {riskPercentage}%\r\n                </Typography>\r\n                <Box\r\n                  sx={{\r\n                    transform: 'translateY(-50%)',\r\n                    backgroundImage: 'url(/union-3.svg)',\r\n                    color: 'white',\r\n                    display: 'inline-block',\r\n                    textAlign: \"center\",\r\n                    fontSize: '12px',\r\n                    fontWeight: 'bold',\r\n                    backgroundSize: \"cover\",\r\n                    width: \"128px\",\r\n                    padding: \"9px\",\r\n                    paddingRight: \"0px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body5\" sx={{ fontWeight: 'bold', color: \"white !important\", fontSize: \"14px\", marginLeft: \"8px\" }}>\r\n                    Lifetime risk\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Spinner from 'react-bootstrap/Spinner'; // Import Bootstrap Spinner for Loader\r\nimport { BodyPage } from \"../Components/Layout/index.mjs\";\r\nimport { CrohnRiskData, InfoModalData } from \"../Data\";\r\nimport { CardBehavior, CardHumain, ColorRiskCard, CardBehaviorCheck } from \"../Components/Card/index\";\r\nimport { InfoModal } from \"../Components/Modal/InfoModal\";\r\n\r\nimport { useRiskCalculation ,useParticipantProfile} from \"../Hooks/index.mjs\";\r\nimport { useNavigate } from 'react-router-dom';\r\nconst CrohnRisk = ({ title }) => {\r\n    const navigate = useNavigate();\r\n    const { RiskCalculation, response, loading, error } = useRiskCalculation(); // Use loading state\r\n    const {profileData, loading:loadingProfileData, error:errorProfileData } = useParticipantProfile();\r\n    const [open, setOpen] = useState(false);\r\n    const [RiskData, setRiskData] = useState(false);\r\n    const firtSetnance = \"Based on the answers you provided to the questionnaires, your blood tests, and your stool tests,\"\r\n    const Diagnostics = \"you have a high risk for Crohnâ€™s disease\"\r\n    const lastDiagnostics = \"when compared to other people who have a family member with Crohnâ€™s disease.\"\r\n    const HumainSentnace = 'Your personal risk of developing Crohnâ€™s disease is '\r\n    const behaviors = [\r\n        \"You're physically active\",\r\n        \"You don't smoke\",\r\n    ];\r\n\r\n    const Goodbehaviors = [\r\n        \"Lower your sucrose (sugar) intake\",\r\n        \"Increase your physical activity\",\r\n        \"Quit smoking\"\r\n    ];\r\n\r\n    useEffect(() => {\r\n        try {\r\n            RiskCalculation(); // Trigger the risk calculation\r\n        } catch (err) {\r\n            console.log(\"There is an error in calculation:\", err);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n       if(profileData){\r\n       const state = profileData.state\r\n       const role =profileData?.role\r\n       const phase = profileData?.phase\r\n       if(phase === 0 && state === 0){\r\n        navigate(\"/login\");\r\n       }\r\n       if(role === \"3\" &&phase !== 2 && state !== 0){\r\n        console.log(\"login\")\r\n        //navigate(\"/login\");\r\n        }\r\n       }\r\n    }, [profileData]);\r\n//profileData\r\n    useEffect(() => {\r\n        console.log(response); // Log the response when it updates\r\n        setRiskData(response)\r\n    }, [response]);\r\n\r\n    return (\r\n        <>\r\n            {title ? <div className='title-content'><h1>{title}</h1></div> : \"\"}\r\n\r\n            <Container className='content-container'>\r\n                {/* Loader Layer: Show loader when waiting for the response */}\r\n                {loading && (\r\n                    <div className=\"loader-overlay\">\r\n                        <Spinner animation=\"border\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </Spinner>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Content Layer: Only show when not loading */}\r\n                {!loading && (\r\n                    <>\r\n                        <BodyPage data={CrohnRiskData} />\r\n                        <ColorRiskCard\r\n                            riskLevel={RiskData?.CategorizeRisk}\r\n                            firtSetnance={firtSetnance}\r\n                            Diagnostics={Diagnostics}\r\n                            lastDiagnostics={lastDiagnostics}\r\n                        />\r\n                        <CardHumain\r\n                            HumainSentnace={HumainSentnace}\r\n                            firtSetnance={firtSetnance}\r\n                            Diagnostics={Diagnostics}\r\n                            lastDiagnostics={lastDiagnostics}\r\n                            riskPercentage={RiskData?.FinalRsultRound}\r\n                        />\r\n                        <CardBehavior\r\n                            title=\"Keep up the good work!\"\r\n                            subtitle=\"Great job! You reported behaviors that are associated with a lower risk for Crohn's disease:\"\r\n                            behaviors={behaviors}\r\n                        />\r\n                        <CardBehaviorCheck\r\n                            title=\"Watch your risk drop\"\r\n                            subtitle=\"Check the boxes next to the behaviors below to see how these changes could reduce your risk of Crohnâ€™s disease.\"\r\n                            behaviors={Goodbehaviors}\r\n                            openMpdal={() => { setOpen(true); }}\r\n                            riskPercentage={RiskData?.FinalRsultRound}\r\n                            RiskLevel={RiskData?.CategorizeRisk} \r\n                            EmptyHumain={100-RiskData?.FinalRsultRound}\r\n                            FilledHumans={RiskData?.FinalRsultRound}\r\n                            \r\n                            \r\n                        />\r\n                    </>\r\n                )}\r\n            </Container>\r\n\r\n            {open && (\r\n                <InfoModal\r\n                    open={open}\r\n                    handleClose={() => { setOpen(false); }}\r\n                    title=\"Lower your sucrose (sugar) intake\"\r\n                    content={InfoModalData.content}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CrohnRisk;\r\n"],"names":["Spinner","React.forwardRef","bsPrefix","variant","animation","size","Component","className","props","ref","useBootstrapPrefix","bsSpinnerPrefix","_jsx","classNames","useRiskCalculation","response","setresponse","useState","loading","setLoading","error","setError","formData","axios","err","_interopRequireDefault","require$$0","HelpOutline","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","CardBehavior","title","subtitle","behaviors","jsxs","Paper","jsx","Typography","Grid","behavior","index","Box","IconButton","HelpOutlineIcon","riskLevels","riskColors","RiskCard","riskLevel","firtSetnance","Diagnostics","lastDiagnostics","riskBoxTopPosition","level","CardHumain","HumainSentnace","firstSentence","diagnostics","riskPercentage","greenHumain","filledHumans","emptyHumans","currentRiskPosition","_","Close","InfoModal","open","handleClose","content","Dialog","DialogTitle","CloseIcon","DialogContent","parse","CardBehaviorCheck","openMpdal","RiskLevel","EmptyHumain","FilledHumans","CurrentPosition","setCurrentPosition","checkedBehaviors","setCheckedBehaviors","setgreenHumain","emeptyTimeless","handleCheckboxChange","prevState","Checkbox","Fragment","CrohnRisk","navigate","useNavigate","RiskCalculation","profileData","loadingProfileData","errorProfileData","useParticipantProfile","setOpen","RiskData","setRiskData","Goodbehaviors","useEffect","state","role","phase","Container","BodyPage","CrohnRiskData","ColorRiskCard","InfoModalData"],"mappings":"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","x_google_ignoreList":[0,2,6]}